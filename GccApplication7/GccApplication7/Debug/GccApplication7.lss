
GccApplication7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000023c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001c8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  0000023c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000023c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000026c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000002a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006c1  00000000  00000000  000002d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000632  00000000  00000000  00000991  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000245  00000000  00000000  00000fc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000006c  00000000  00000000  00001208  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000366  00000000  00000000  00001274  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000a4  00000000  00000000  000015da  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  0000167e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__vector_21>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 30       	cpi	r26, 0x04	; 4
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:
int low;
int high;

int main(void)
{
	DDRB = 0xFF;
  90:	8f ef       	ldi	r24, 0xFF	; 255
  92:	84 b9       	out	0x04, r24	; 4
	
	ADMUX = 0b01000000;
  94:	80 e4       	ldi	r24, 0x40	; 64
  96:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = 0b11001111;
  9a:	8f ec       	ldi	r24, 0xCF	; 207
  9c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
	DDRC = 0x00;
  a0:	17 b8       	out	0x07, r1	; 7
	
	TCCR1B = 0b00001001;
  a2:	89 e0       	ldi	r24, 0x09	; 9
  a4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TCCR2B = 0b00000001;
  a8:	81 e0       	ldi	r24, 0x01	; 1
  aa:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
	
	TCCR1A = 0b10100011;
  ae:	83 ea       	ldi	r24, 0xA3	; 163
  b0:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR2A = 0b10000011;
  b4:	83 e8       	ldi	r24, 0x83	; 131
  b6:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
	
	OCR1A = 0;
  ba:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  be:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	
	sei();
  c2:	78 94       	sei
  c4:	ff cf       	rjmp	.-2      	; 0xc4 <main+0x34>

000000c6 <__vector_21>:
	while(1){
	
	}
}

ISR(ADC_vect){
  c6:	1f 92       	push	r1
  c8:	0f 92       	push	r0
  ca:	0f b6       	in	r0, 0x3f	; 63
  cc:	0f 92       	push	r0
  ce:	11 24       	eor	r1, r1
  d0:	2f 93       	push	r18
  d2:	3f 93       	push	r19
  d4:	5f 93       	push	r21
  d6:	6f 93       	push	r22
  d8:	7f 93       	push	r23
  da:	8f 93       	push	r24
  dc:	9f 93       	push	r25
  de:	af 93       	push	r26
  e0:	bf 93       	push	r27
	low = ADCL;
  e2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
  e6:	28 2f       	mov	r18, r24
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <low+0x1>
  ee:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <low>
	high = ADCH;
  f2:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  f6:	89 2f       	mov	r24, r25
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  fe:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	OCR1A = (low + high*256);
 102:	98 2f       	mov	r25, r24
 104:	88 27       	eor	r24, r24
 106:	82 0f       	add	r24, r18
 108:	93 1f       	adc	r25, r19
 10a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 10e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	OCR1B = (low + high*256);
 112:	20 e0       	ldi	r18, 0x00	; 0
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	30 91 00 01 	lds	r19, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 11a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <low>
 11e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <low+0x1>
 122:	82 0f       	add	r24, r18
 124:	93 1f       	adc	r25, r19
 126:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 12a:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
	OCR2A = 256*(low + high*256)/1023;
 12e:	20 e0       	ldi	r18, 0x00	; 0
 130:	30 e0       	ldi	r19, 0x00	; 0
 132:	30 91 00 01 	lds	r19, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 136:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <low>
 13a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <low+0x1>
 13e:	82 0f       	add	r24, r18
 140:	93 1f       	adc	r25, r19
 142:	98 2f       	mov	r25, r24
 144:	80 e0       	ldi	r24, 0x00	; 0
 146:	6f ef       	ldi	r22, 0xFF	; 255
 148:	73 e0       	ldi	r23, 0x03	; 3
 14a:	0e 94 ba 00 	call	0x174	; 0x174 <__divmodhi4>
 14e:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	ADCSRA = 0b11001111;
 152:	8f ec       	ldi	r24, 0xCF	; 207
 154:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
}
 158:	bf 91       	pop	r27
 15a:	af 91       	pop	r26
 15c:	9f 91       	pop	r25
 15e:	8f 91       	pop	r24
 160:	7f 91       	pop	r23
 162:	6f 91       	pop	r22
 164:	5f 91       	pop	r21
 166:	3f 91       	pop	r19
 168:	2f 91       	pop	r18
 16a:	0f 90       	pop	r0
 16c:	0f be       	out	0x3f, r0	; 63
 16e:	0f 90       	pop	r0
 170:	1f 90       	pop	r1
 172:	18 95       	reti

00000174 <__divmodhi4>:
 174:	97 fb       	bst	r25, 7
 176:	07 2e       	mov	r0, r23
 178:	16 f4       	brtc	.+4      	; 0x17e <__divmodhi4+0xa>
 17a:	00 94       	com	r0
 17c:	07 d0       	rcall	.+14     	; 0x18c <__divmodhi4_neg1>
 17e:	77 fd       	sbrc	r23, 7
 180:	09 d0       	rcall	.+18     	; 0x194 <__divmodhi4_neg2>
 182:	0e 94 ce 00 	call	0x19c	; 0x19c <__udivmodhi4>
 186:	07 fc       	sbrc	r0, 7
 188:	05 d0       	rcall	.+10     	; 0x194 <__divmodhi4_neg2>
 18a:	3e f4       	brtc	.+14     	; 0x19a <__divmodhi4_exit>

0000018c <__divmodhi4_neg1>:
 18c:	90 95       	com	r25
 18e:	81 95       	neg	r24
 190:	9f 4f       	sbci	r25, 0xFF	; 255
 192:	08 95       	ret

00000194 <__divmodhi4_neg2>:
 194:	70 95       	com	r23
 196:	61 95       	neg	r22
 198:	7f 4f       	sbci	r23, 0xFF	; 255

0000019a <__divmodhi4_exit>:
 19a:	08 95       	ret

0000019c <__udivmodhi4>:
 19c:	aa 1b       	sub	r26, r26
 19e:	bb 1b       	sub	r27, r27
 1a0:	51 e1       	ldi	r21, 0x11	; 17
 1a2:	07 c0       	rjmp	.+14     	; 0x1b2 <__udivmodhi4_ep>

000001a4 <__udivmodhi4_loop>:
 1a4:	aa 1f       	adc	r26, r26
 1a6:	bb 1f       	adc	r27, r27
 1a8:	a6 17       	cp	r26, r22
 1aa:	b7 07       	cpc	r27, r23
 1ac:	10 f0       	brcs	.+4      	; 0x1b2 <__udivmodhi4_ep>
 1ae:	a6 1b       	sub	r26, r22
 1b0:	b7 0b       	sbc	r27, r23

000001b2 <__udivmodhi4_ep>:
 1b2:	88 1f       	adc	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	5a 95       	dec	r21
 1b8:	a9 f7       	brne	.-22     	; 0x1a4 <__udivmodhi4_loop>
 1ba:	80 95       	com	r24
 1bc:	90 95       	com	r25
 1be:	bc 01       	movw	r22, r24
 1c0:	cd 01       	movw	r24, r26
 1c2:	08 95       	ret

000001c4 <_exit>:
 1c4:	f8 94       	cli

000001c6 <__stop_program>:
 1c6:	ff cf       	rjmp	.-2      	; 0x1c6 <__stop_program>
